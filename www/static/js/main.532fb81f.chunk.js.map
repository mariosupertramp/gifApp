{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","GifGridItem.js","GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGif","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"yMAEaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAqBhD,OAGI,sBAAMC,SAdW,SAACC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAEpBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOxB,SACA,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAxBiB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAEvB,MAAO,CACFC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QAXpB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,OAAf,UAEG,qBAAKC,IAAQjB,EAAMkB,IAAQR,IAC3B,kCAAMA,EAAN,WCJES,EAAU,SAAC,GAAqB,IAAlBrB,EAAiB,EAAjBA,UAAiB,ECHjB,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAElCqB,KAAM,GACNe,SAAU,IAL8B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAyC1C,OA7BFC,qBAAW,WAEX1B,EAAQC,GACC0B,MAAO,SAAAC,GAEJH,EAAS,CACLjB,KAAMoB,EACNL,SAAU,SAKvB,CAACtB,IAiBKuB,EDnCwBK,CAAa5B,GAAlC6B,EAHgC,EAGrCtB,KAAee,EAHsB,EAGtBA,QAGlB,OAEI,qCAEA,mCAAOtB,EAAP,OAEEsB,GAAW,wCAEX,qBAAKJ,UAAU,YAAf,SAEIW,EAASpB,KAAK,SAAAC,GAAG,OAEjB,cAAC,EAAD,eAESA,GADGA,EAAIC,aErBjBmB,EAAe,WAAO,IAAD,EAEG5C,mBAAS,CAAC,aAFb,mBAE1B6C,EAF0B,KAEd9C,EAFc,KAK9B,OACI,qCAEA,gDAEA,cAAE,EAAF,CAAcA,cAAkBA,IAEhC,uBAGP,6BAID8C,EAAWtB,KAAK,SAAAT,GAAS,OAEpB,cAAC,EAAD,CAEEA,UAAaA,GADNA,Y,MCrBdgC,IAASC,OAEL,cAAE,EAAF,IAEFC,SAASC,eAAe,W","file":"static/js/main.532fb81f.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport const AddCategory = ( { setCategorias } ) => {\n\n    const [inputValue, setinputValue] = useState('')\n\n    const handleinputvalue = (e) => {\n\n       setinputValue(e.target.value);\n\n    }\n\n    const handleSubmit = (e) => {\n\n       e.preventDefault(); // prevengo el comportamieto del form por defecto\n\n       if( inputValue.trim().length > 2){\n           \n                  setCategorias( cats => [inputValue,...cats] );\n                  setinputValue('');\n                }\n    }\n\n    return (\n\n\n        <form onSubmit={handleSubmit}>\n        <input \n            type=\"text\"\n            value = { inputValue }\n            onChange = { handleinputvalue }\n        />\n      </form>\n\n\n    )\n}\n","export const getGifs = async( categoria ) => {\n  \n    const url = `https://api.giphy.com/v1/gifs/search?api_key=vz990CvPmgsJZd3M1s7wRW4yv2Q2dJqJ&q=${ encodeURI(categoria) }&limit=10`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n    const gifs = data.map( img => {\n    \n    return {\n         id : img.id,\n         title : img.title,\n         url : img.images.downsized_medium.url \n    }\n    })\n    \n  return gifs;\n    \n    }\n    ","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    \n    console.log(id, title, url)\n    \n    return (\n        <div className=\"card\">\n            \n           <img src = { url } alt = { title } />\n           <p> { title } </p>\n \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGif } from './hooks/useFetchGif'\n\n//import React, { useEffect, useState } from 'react'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { categoria } ) => {\n\n\nconst {data:imagenes, loading} = useFetchGif( categoria );\n\n\n    return (\n\n        <>\n\n        <h3> { categoria } </h3>\n\n         {loading && <p>loading</p>}\n        \n       {  <div className=\"card-grid\">\n           {\n              imagenes.map( img => (\n\n              <GifGridItem  \n                  key = { img.id }\n                  { ...img } \n              />\n              ))\n                              \n           }\n            \n        </div> }\n\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGif = ( categoria ) => {\n\n   const [state, setstate] = useState({\n\n    data: [],\n    loading : true\n\n   });\n\n\n\n\nuseEffect( () => {\n\ngetGifs(categoria)\n        .then(  imgs => {\n\n            setstate({\n                data: imgs,\n                loading : false\n            });\n\n        })\n\n}, [categoria]);\n\n\n\n\n/* \n   setTimeout(() => {\n\n    setstate({\n\ndata : [1,2,3,4,5,6,7,8,9],\nloading : false\n\n    })\n       \n   }, 3000); */\n\n  return state;\n    \n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport const GifExpertApp = () => {\n\n const [categorias, setCategorias] = useState(['juguetes'])\n\n\n    return (\n        <>\n\n        <h2>Gif Expert App</h2>\n\n        < AddCategory setCategorias = { setCategorias } />\n\n        <hr />\n\n\n <ol>\n\n{\n\ncategorias.map( categoria => (\n\n     <GifGrid \n       key = {categoria}\n       categoria = {categoria} \n    /> \n    //return <li key={categoria}>{categoria}</li>\n\n))\n\n}\n\n</ol>\n\n\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n    < GifExpertApp />,\n\n  document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}